// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry          = require("bs-platform/lib/js/curry.js");
var Caml_oo_curry  = require("bs-platform/lib/js/caml_oo_curry.js");
var CamlinternalOO = require("bs-platform/lib/js/camlinternalOO.js");

var class_tables = [
  0,
  0,
  0
];

function create() {
  if (!class_tables[0]) {
    var $$class = CamlinternalOO.create_table([
          "add",
          "get"
        ]);
    var ids = CamlinternalOO.new_methods_variables($$class, [
          "get",
          "add"
        ], ["data"]);
    var get = ids[0];
    var add = ids[1];
    var data = ids[2];
    CamlinternalOO.set_methods($$class, /* array */[
          add,
          (function (self$1, _) {
              self$1[data] = self$1[data] + 1 | 0;
              return self$1;
            }),
          get,
          (function (self$1, _) {
              return self$1[data];
            })
        ]);
    var env_init = function () {
      var self = CamlinternalOO.create_object_opt(0, $$class);
      self[data] = 0;
      return self;
    };
    CamlinternalOO.init_class($$class);
    class_tables[0] = env_init;
  }
  return Curry._1(class_tables[0], 0);
}

var ctx1 = create(/* () */0);

var tmp = Caml_oo_curry.js2(4846113, 1, ctx1, /* () */0);

var result = Caml_oo_curry.js2(5144726, 2, tmp, /* () */0);

var match = +(result === 1);

if (match !== 0) {
  console.log("SUCCESS");
} else {
  console.log("ERROR");
}

var ctx2 = create(/* () */0);

var tmp$1 = Caml_oo_curry.js2(4846113, 4, tmp$2, /* () */0);

var tmp$2 = Caml_oo_curry.js2(4846113, 3, ctx2, /* () */0);

var result$1 = Caml_oo_curry.js2(5144726, 5, tmp$1, /* () */0);

var match$1 = +(result$1 === 2);

if (match$1 !== 0) {
  console.log("SUCCESS");
} else {
  console.log("ERROR");
}

exports.create = create;
exports.ctx1   = ctx1;
exports.ctx2   = ctx2;
exports.result = result$1;
/* ctx1 Not a pure module */
